#version 330


uniform uint objectsCount;

layout (column_major) uniform CameraBuffer {
	vec4	position;
	mat4	viewProjectionMatrix;
} camera;

layout (column_major) uniform ObjectBuffer {
	mat4	modelMatrix;
} object[];


in      vec3    vPos;
in      vec2    vTex;
in      vec3    vTan;
in      vec3    vBin;
in      vec3    vNor;


out     vec3    fPos;
out     mat3    fTBN;
out     vec2    fTex;


void main()
{
	gl_Position = (camera.viewProjectionMatrix * object.modelMatrix) * vec4(vPos, 1.0f);
    
	fPos = (object.modelMatrix * vec4(vPos, 1)).xyz - camera.position.xyz;
	
	mat3	rotateMatrix = mat3(object.modelMatrix);
    
	fTBN = rotateMatrix * mat3(vTan, vBin, vNor);
    fTex = vTex;
}